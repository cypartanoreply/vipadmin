name: Django CI/CD with Uvicorn (No Docker Hub)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Uncomment and configure the artifact cleanup step if needed
    # - name: Remove old artifacts
    #   uses: c-hive/gha-remove-artifacts@v1
    #   with:
    #     age: '1 days' # '<number> <unit>', e.g. 5 days, 2 years, 90 seconds, parsed by Moment.js
    #     skip-tags: true
    #     skip-recent: 5

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
        docker-compose --version

    - name: Build Docker Image
      run: |
        docker-compose build
        docker images  # Confirm the build

    - name: Save Docker image as tarball
      run: |
        docker save django_app:latest -o django_app.tar

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: django_app.tar
        path: django_app.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: django_app.tar
        retention-days: 1

    - name: Install sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass

    - name: Upload Docker Image to Droplet via SFTP
      run: |
        sshpass -p ${{ secrets.DROPLET_PASSWORD }} sftp -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }} <<EOF
          put django_app.tar /root/django_app.tar
        EOF

    - name: Upload nginx.conf to Droplet via SFTP
      run: |
        sshpass -p ${{ secrets.DROPLET_PASSWORD }} sftp -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }} <<EOF
          put nginx.conf /root/nginx.conf
        EOF

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USERNAME }}
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          # Load environment variables from .env file
          export $(grep -v '^#' /root/.env | xargs)
          # Load the Docker image
          docker load -i /root/django_app.tar
          # Find the directory with docker-compose.yml
          COMPOSE_DIR=$(find / -name "docker-compose.yml" 2>/dev/null | xargs dirname | head -n 1)  # Find directory
          # Change to the directory with docker-compose.yml
          cd $COMPOSE_DIR
          # Bring down existing containers and bring up new ones
          docker-compose down || true
          docker-compose up -d
