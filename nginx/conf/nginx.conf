
# server {
#     listen 80;
#     server_name memo.cyparta.com;
    
#     location / {
#         return 301 https://$host$request_uri;
#     }

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name memo.cyparta.com;

#     ssl_certificate /etc/nginx/ssl/live/memo.cyparta.com/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/memo.cyparta.com/privkey.pem;

#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_dhparam /etc/ssl/certs/dhparam.pem;

#     location / {
#         proxy_pass http://127.0.0.1:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# HTTP server block
server {
    listen 80;
    server_name memo.cyparta.com;

    location / {
        # Check if the SSL certificate exists
        if (-f /etc/nginx/ssl/live/memo.cyparta.com/fullchain.pem) {
            # Redirect to HTTPS if SSL certificate exists
            return 301 https://$host$request_uri;
        }

        # Serve HTTP if SSL certificate does not exist
        # You can handle it differently here if needed
        return 200 "SSL certificate not found. Serving HTTP.";  # Simple message
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;  # Directory for Let's Encrypt challenge
    }
}

# HTTPS server block
server {
    listen 443 ssl;
    server_name memo.cyparta.com;

    # SSL Certificate and Key Paths
    ssl_certificate /etc/nginx/ssl/live/memo.cyparta.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/memo.cyparta.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    location / {
        proxy_pass http://127.0.0.1:8000;  # Adjust to your backend service
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
